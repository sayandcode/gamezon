import { doc, deleteDoc, setDoc, getDoc } from 'firebase/firestore';
import { firestoreDB } from '../firebase-config';
import {
  GAME_DB_COLLECTION_NAME,
  ORDER_DB_COLLECTION_NAME,
  USERS_DB_COLLECTION_NAME,
} from './DBNames';

class DBManipulator {
  #collectionNames;

  #docNameAliases;

  constructor(collectionNames, docNameAliases) {
    this.#collectionNames = collectionNames;
    this.#docNameAliases = docNameAliases;
  }

  #extractDocPathFrom(aliasesObj) {
    // The order of collectionNames and docNameAliases in their arrays determine the document path.
    // So it is important to pay attention to the relative ordering of arrays.
    const docNames = this.#docNameAliases.map(
      (aliasKey) => aliasesObj[aliasKey]
    );
    // The docPath is generated by interleaving the collectionNames and the documentIDs, which is dynamically provided
    // by the user at the time of consumption. But the accepted keys(aliases) are pre-determined
    const docPath = docNames.flatMap((docName, i) => [
      this.#collectionNames[i],
      docName,
    ]);
    return docPath;
  }

  /* ðŸ‘‡ Public methods ðŸ‘‡ */

  async get(aliasesObj) {
    const docPath = this.#extractDocPathFrom(aliasesObj);
    const docRef = doc(firestoreDB, ...docPath);
    const fetchedDoc = await getDoc(docRef);
    if (fetchedDoc.exists())
      return { ref: fetchedDoc, data: fetchedDoc.data() };
    return undefined;
  }

  async set({ data, ...aliasesObj }) {
    const docPath = this.#extractDocPathFrom(aliasesObj);
    const docRef = doc(firestoreDB, ...docPath);
    return setDoc(docRef, data);
  }

  async delete(aliasesObj) {
    const docPath = this.#extractDocPathFrom(aliasesObj);
    const docRef = doc(firestoreDB, ...docPath);
    return deleteDoc(docRef);
  }
}

const UsersDatabase = new DBManipulator([USERS_DB_COLLECTION_NAME], ['userID']);
const GameDatabase = new DBManipulator([GAME_DB_COLLECTION_NAME], ['title']);
const OrderDatabase = new DBManipulator(
  [USERS_DB_COLLECTION_NAME, ORDER_DB_COLLECTION_NAME],
  ['userID', 'orderID']
);

export { UsersDatabase, GameDatabase, OrderDatabase };
